
10
00:00:24,440 --> 00:00:27,170
‫So node JS, or Express apps,

11
00:00:27,170 --> 00:00:29,270
‫can run in different environments.

12
00:00:29,270 --> 00:00:32,660
‫And the most important ones are the development environment

13
00:00:32,660 --> 00:00:34,440
‫and the production environment.

14
00:00:34,440 --> 00:00:37,180
‫That's because depending on the environment,

15
00:00:37,180 --> 00:00:39,690
‫we might use different databases for example,

16
00:00:39,690 --> 00:00:42,260
‫or we might turn login on or off,

17
00:00:42,260 --> 00:00:44,730
‫or we might turn debugging on or off,

18
00:00:44,730 --> 00:00:47,410
‫or really all kinds of different settings that might

19
00:00:47,410 --> 00:00:50,450
‫change depending on the development that we're in.

20
00:00:50,450 --> 00:00:53,360
‫So again the most important ones are the development

21
00:00:53,360 --> 00:00:55,240
‫and the production environment.

22
00:00:55,240 --> 00:00:56,890
‫But there are other environments

23
00:00:56,890 --> 00:00:58,980
‫that bigger teams might use.

24
00:00:58,980 --> 00:01:01,190
‫So this type of setting that I just mentioned,

25
00:01:01,190 --> 00:01:04,570
‫like different databases or login turned on or off,

26
00:01:04,570 --> 00:01:07,890
‫that will be based on environment variables.




32
00:01:21,550 --> 00:01:23,700
‫and we're gonna do that here in the server.

33
00:01:24,680 --> 00:01:27,350
‫So remember that everything that is not related

34
00:01:27,350 --> 00:01:32,350
‫to Express we're gonna do it outside of the app.JS file.

35
00:01:33,260 --> 00:01:36,660
‫So we only use this app.js file here to configuring our application.

36
00:01:36,660 --> 00:01:39,530
i.e: in order to configure everything

37
00:01:39,530 --> 00:01:42,423
‫that has to do with the Express application.

38
00:01:43,370 --> 00:01:45,530
‫But the environment variables are really outside

39
00:01:45,530 --> 00:01:47,003
‫the scope of Express.

(that's why in server.js )




49
00:02:17,100 --> 00:02:21,240
‫So in summary, environment variables are global variables

50
00:02:21,240 --> 00:02:24,150
‫that are used to define the environment in which

51
00:02:24,150 --> 00:02:25,640
‫a node app is running.






55
00:02:36,950 --> 00:02:40,040
‫but node JS itself actually also sets a lot

56
00:02:40,040 --> 00:02:42,170
‫of environment variables.

57
00:02:42,170 --> 00:02:45,510
‫And so let's actually take a look at those as well.

58
00:02:45,510 --> 00:02:48,410
‫So these ones are located at process

59
00:02:52,035 --> 00:02:53,270
‫.env.

60
00:02:53,270 --> 00:02:56,450
‫Give it a save and so here we have a bunch

61
00:02:56,450 --> 00:03:01,170
‫of different variables okay and I will not go through

62
00:03:01,170 --> 00:03:04,330
‫all of them but let's just see they really

63
00:03:04,330 --> 00:03:05,450
‫are a bunch of them,

64
00:03:05,450 --> 00:03:08,180
‫and node uses most of them internally.

65
00:03:08,180 --> 00:03:11,060
‫For example a task to current working directory here

66
00:03:11,060 --> 00:03:14,630
‫in this environment variable and really a bunch

67
00:03:14,630 --> 00:03:16,483
‫of other stuff as you can see.

68
00:03:17,580 --> 00:03:22,580
‫For example my home folder or my login name

69
00:03:23,030 --> 00:03:26,740
‫you see the script that we use to start this process

70
00:03:28,024 --> 00:03:30,210
‫so really a bunch of stuff that for some reason

71
00:03:30,210 --> 00:03:32,640
‫node JS internally needs.

72
00:03:32,640 --> 00:03:36,590
‫Now these variables, they come from the process core module

73
00:03:36,590 --> 00:03:39,960
‫and we're set at the moment that the process started.

74
00:03:39,960 --> 00:03:40,970
‫And as you see,

75
00:03:40,970 --> 00:03:44,490
‫we didn't have to require the process module right.

76
00:03:44,490 --> 00:03:47,480
‫It is simply available everywhere automatically.

77
00:03:47,480 --> 00:03:51,420
‫Now in Express, many packages depend on a special variable

78
00:03:51,420 --> 00:03:53,120
‫called node N.

79
00:03:53,120 --> 00:03:55,930
‫So it's a variable that's kind of a convention

80
00:03:55,930 --> 00:03:58,920
‫which should define whether we're in development

81
00:03:58,920 --> 00:04:00,963
‫or in production mode okay.

82
00:04:01,995 --> 00:04:04,680
‫However Express does not really define this variable,

83
00:04:04,680 --> 00:04:07,160
‫and so we have to do that manually.


*******************************IMPORTANT*********************************************


111
00:05:33,098 --> 00:05:35,940
‫So again many packages on npm that we use

112
00:05:35,940 --> 00:05:39,290
‫for Express development actually depend on this

113
00:05:39,290 --> 00:05:40,560
‫environment variable.

114
00:05:40,560 --> 00:05:43,920
‫And so when our project is ready and we are gonna deploy it,

115
00:05:43,920 --> 00:05:47,440
‫we then should change the node N and variable to production.

116
00:05:47,440 --> 00:05:50,440
‫And we will do that of course once we deploy the project

117
00:05:50,440 --> 00:05:51,853
‫by the end of the course.

118
00:05:53,043 --> 00:05:56,350
‫So we set node N and X as environment variables,

119
00:05:56,350 --> 00:05:58,290
‫but we can do a lot more.

120
00:05:58,290 --> 00:06:01,660
‫And that's because we usually use environment variables

121
00:06:01,660 --> 00:06:04,950
‫like configuration settings for our applications.

122
00:06:04,950 --> 00:06:08,640
‫So whenever our app needs some configuration for stuff

123
00:06:08,640 --> 00:06:10,860
‫that might change based on the environment

124
00:06:10,860 --> 00:06:14,330
‫that the app is running in, we use environment variables.

125
00:06:14,330 --> 00:06:17,550
‫For example we might use different databases for development

126
00:06:17,550 --> 00:06:20,470
‫and for testing until we could define one variable

127
00:06:20,470 --> 00:06:23,640
‫for each and then activate the right database

128
00:06:23,640 --> 00:06:25,410
‫according to the environment.

129
00:06:25,410 --> 00:06:28,590
‫Also we could set sensitive data like passwords

130
00:06:28,590 --> 00:06:31,493
‫and user name using environment variables.


************************************************************************************************************************






